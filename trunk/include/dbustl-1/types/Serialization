/*
 *  DBusTL - D-Bus Template Library
 *
 *  Copyright (C) 2008, 2009  Fabien Chevalier <chefabien@gmail.com>
 *  
 *
 *  This file is part of the D-Bus Template Library.
 *
 *  The D-Bus Template Library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 2.1 of the License, or
 *  (at your option) any later version.
 *
 *  D-Bus Template Library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with D-Bus Template Library.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef DBUSTL_TYPES_SERIALIZATION
#define DBUSTL_TYPES_SERIALIZATION

// D-Bus arguments types convertion

//This file only declares the templates used for arguments serialization/deserialization
//Implementations live in other files

#include <dbus/dbus.h>

namespace dbustl {
namespace types {

    // Generate a D-Bus signature for a given C++ type
    template <typename T>
    struct SignatureImpl;

    template <typename T>
    const char * Signature()
    {
        static char* signature = new char[SignatureImpl<T>::size + 1];
        int idx = 0;
    #ifdef DBUSTL_NO_EXCEPTIONS
        if(signature) {
    #endif
            SignatureImpl<T>::calcValue(signature, &idx);
            signature[idx] = 0;
    #ifdef DBUSTL_NO_EXCEPTIONS
        }
        else {
            signature = (char *)"";
        }
    #endif
        return signature;
    }
        
    template<typename T>
    struct Serializer {
        static dbus_bool_t run(DBusMessageIter* it, const T& arg);
    };
    
    template<typename T>
    struct Deserializer {
        static dbus_bool_t run(DBusMessageIter* it, T* arg);
    };

}
}

#endif /* DBUSTL_TYPES_SERIALIZATION */
