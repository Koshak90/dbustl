/*
 *  DBUSTL - DBus Template Library
 *
 *  Copyright (C) 2008  Fabien Chevalier <fabchevalier@free.fr>
 *  
 *
 *  This file is part of the DBus Template Library.
 *
 *  The DBus Template Library is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 2.1 of the License, or
 *  (at your option) any later version.
 *
 *  DBus Template Library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with DBus Template Library.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef DBUSTL_EVENTMAINLOOPINTEGRATION
#define DBUSTL_EVENTMAINLOOPINTEGRATION

#include <dbustl-1/EventLoopIntegration>

#include <glib.h>

namespace dbustl {

    class Connection;

    class GlibEventLoopIntegration : public EventLoopIntegration {
        public:
            GlibEventLoopIntegration(GMainContext *ctxt = 0);
            virtual ~GlibEventLoopIntegration();
            //Virtual constructor : builds an MainLoopIntegration object with the same
            //characteristics as this one (same integration method, same thread, same everything ...)
            virtual EventLoopIntegration* clone() const;

        private:
            //forbidden methods
            GlibEventLoopIntegration(const GlibEventLoopIntegration&);
            GlibEventLoopIntegration& operator=(GlibEventLoopIntegration&);
            
            //This method is guaranteed to be called no more than once.
            virtual bool internalConnect(Connection* conn);

            GMainContext *_ctxt;
    };

}

#endif /* DBUSTL_EVENTMAINLOOPINTEGRATION */
